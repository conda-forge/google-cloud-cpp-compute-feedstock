{% set version = "2.17.0" %}

package:
  name: google-cloud-cpp-compute
  version: {{ version }}

source:
  url: https://github.com/googleapis/google-cloud-cpp/archive/v{{ version }}.tar.gz
  sha256: 8cb87ec2947e691a7f8631877e78453bcfda51b3d3cd4940794a376741888d37
  patches:
    # This is an upstream fix to allow sharding google/cloud/oauth2
    - patches/0001-Backport-12911-from-upstream.patch

build:
  number: 1
requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja
    - libgrpc
    - libprotobuf
  host:
    - libgoogle-cloud-devel =={{ version }}
    - libabseil
    - libcurl
    - libgrpc
    - libprotobuf
    - openssl
    - nlohmann_json
    - zlib # Needed by gRPC

outputs:
  - name: libgoogle-cloud-compute
    script: install-libgoogle-cloud.sh   # [unix]
    script: install-libgoogle-cloud.bat  # [win]
    build:
      run_exports:
        - libgoogle-cloud =={{ version }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
      host:
        - libgoogle-cloud-devel =={{ version }}
        - libabseil
        - libprotobuf
    test:
      commands:
        # `google-cloud-cpp::compute` is an interface library, it has no
        # binary artifacts.  We use `compute_instances` as a canary for the
        # almost 100 artifacts created by the `compute` feature.
        #
        # presence of shared library (unix)
        - test -f $PREFIX/lib/libgoogle_cloud_cpp_compute_instances.{{ version }}.dylib  # [osx]
        - test -f $PREFIX/lib/libgoogle_cloud_cpp_compute_instances.so.{{ version }}  # [linux]

        # absence of static library (windows). It belongs only in devel package.
        - if exist %LIBRARY_LIB%\google_cloud_cpp_compute_instances.lib exit 1  # [win]

        # absence of headers (they belong in devel package)
        - test ! -f $PREFIX/include/google/cloud/compute/instances/v1/instances_client.h  # [unix]
        - if exist %LIBRARY_INC%\google\cloud\compute\instances\v1\instances_client.h exit 1  # [win]

        # absence of metadata for CMake & pkgconfig (belongs in devel package)
        - test ! -f $PREFIX/lib/pkgconfig/google_cloud_cpp_compute_instances.pc  # [unix]
        - test ! -f $PREFIX/lib/cmake/google_cloud_cpp_common/google_cloud_cpp_compute_instances-config.cmake  # [unix]
        - if exist %LIBRARY_LIB%\cmake\google_cloud_cpp_common\google_cloud_cpp_compute_instances-config.cmake exit 1  # [win]

  - name: libgoogle-cloud-compute-devel
    script: install-libgoogle-cloud.sh   # [unix]
    script: install-libgoogle-cloud.bat  # [win]
    build:
      run_exports:
        # patch versions guaranteed to be ABI-compatible, see
        # https://github.com/googleapis/google-cloud-cpp/blob/main/doc/adr/2023-05-03-patch-releases-are-ABI-compatible.md
        - {{ pin_subpackage("libgoogle-cloud-compute", max_pin="x.x") }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
      host:
        - libgoogle-cloud-devel =={{ version }}
      run:
        - {{ pin_subpackage("libgoogle-cloud-compute", exact=True) }}
    test:
      commands:
        # build an example
        - ./run_test_feature.sh   # [unix]
        - ./run_test_feature.bat  # [win]
      requires:
        - {{ compiler('cxx') }}
        - cmake
        - ninja
        - libgoogle-cloud-devel =={{ version }}
      files:
        - run_test_feature.sh
        - run_test_feature.bat
      source_files:
        - google/cloud/compute/quickstart/*.cc
        - google/cloud/compute/quickstart/CMakeLists.txt

about:
  home: https://github.com/googleapis/google-cloud-cpp
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: Google Cloud Client Library for C++

extra:
  feedstock-name: google-cloud-cpp-compute
  recipe-maintainers:
    - coryan
    - conda-forge/google-cloud-cpp
